//
// ProductsAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class ProductsAPI: APIBase {
    /**

     - parameter product: (body) Product to add to the store 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func addProduct(product product: Product, completion: ((data: InlineResponse2014?, error: ErrorType?) -> Void)) {
        addProductWithRequestBuilder(product: product).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - POST /products
     - Creates a new product in the store.
     - API Key:
       - type: apiKey APIToken 
       - name: APIKeyHeader
     - examples: [{contentType=application/json, example={
  "data" : [ {
    "visibility" : [ "facebook", "facebook" ],
    "is_prefered" : true,
    "is_new" : false,
    "is_digital" : true,
    "url_digital" : "http://example.com",
    "active" : true,
    "created_at" : "2016-10-10T13:26:17+00:00",
    "manual" : "Lorem Ipsum dolus",
    "i18n" : {
      "characteristics" : "Characteristics of product",
      "name" : "name",
      "description" : "Description of product",
      "synopsis" : "synopsis",
      "locale" : "pt_PT",
      "seo" : {
        "keywords" : "keywords",
        "description" : "description",
        "title" : "title"
      }
    },
    "url_video" : "http://youtube.com/foobar/qwocqpeibas2www",
    "expires_at" : "2016-10-10T13:26:17+00:00",
    "updated_at" : "2016-10-10T13:26:17+00:00",
    "in_homepage" : true,
    "id" : 1,
    "sku" : "a123b"
  }, {
    "visibility" : [ "facebook", "facebook" ],
    "is_prefered" : true,
    "is_new" : false,
    "is_digital" : true,
    "url_digital" : "http://example.com",
    "active" : true,
    "created_at" : "2016-10-10T13:26:17+00:00",
    "manual" : "Lorem Ipsum dolus",
    "i18n" : {
      "characteristics" : "Characteristics of product",
      "name" : "name",
      "description" : "Description of product",
      "synopsis" : "synopsis",
      "locale" : "pt_PT",
      "seo" : {
        "keywords" : "keywords",
        "description" : "description",
        "title" : "title"
      }
    },
    "url_video" : "http://youtube.com/foobar/qwocqpeibas2www",
    "expires_at" : "2016-10-10T13:26:17+00:00",
    "updated_at" : "2016-10-10T13:26:17+00:00",
    "in_homepage" : true,
    "id" : 1,
    "sku" : "a123b"
  } ]
}}]
     
     - parameter product: (body) Product to add to the store 

     - returns: RequestBuilder<InlineResponse2014> 
     */
    public class func addProductWithRequestBuilder(product product: Product) -> RequestBuilder<InlineResponse2014> {
        let path = "/products"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = product.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<InlineResponse2014>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**

     - parameter id: (path) ID of product to delete 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func deleteProductById(id id: Int64, completion: ((error: ErrorType?) -> Void)) {
        deleteProductByIdWithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     - DELETE /products/{id}/
     - deletes a single product based on the ID supplied
     - API Key:
       - type: apiKey APIToken 
       - name: APIKeyHeader
     
     - parameter id: (path) ID of product to delete 

     - returns: RequestBuilder<Void> 
     */
    public class func deleteProductByIdWithRequestBuilder(id id: Int64) -> RequestBuilder<Void> {
        var path = "/products/{id}/"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**

     - parameter id: (path) ID of product to fetch 
     - parameter includes: (query) Include associated objects within response (optional)
     - parameter limit: (query) max records to return (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getProductById(id id: Int64, includes: [String]? = nil, limit: Int32? = nil, completion: ((data: InlineResponse2014?, error: ErrorType?) -> Void)) {
        getProductByIdWithRequestBuilder(id: id, includes: includes, limit: limit).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - GET /products/{id}/
     - Returns a product based on a single ID  ### Includes You can give the following values on includes parameter: `brands, categories, routes, stocks` 
     - API Key:
       - type: apiKey APIToken 
       - name: APIKeyHeader
     - examples: [{contentType=application/json, example={
  "data" : [ {
    "visibility" : [ "facebook", "facebook" ],
    "is_prefered" : true,
    "is_new" : false,
    "is_digital" : true,
    "url_digital" : "http://example.com",
    "active" : true,
    "created_at" : "2016-10-10T13:26:17+00:00",
    "manual" : "Lorem Ipsum dolus",
    "i18n" : {
      "characteristics" : "Characteristics of product",
      "name" : "name",
      "description" : "Description of product",
      "synopsis" : "synopsis",
      "locale" : "pt_PT",
      "seo" : {
        "keywords" : "keywords",
        "description" : "description",
        "title" : "title"
      }
    },
    "url_video" : "http://youtube.com/foobar/qwocqpeibas2www",
    "expires_at" : "2016-10-10T13:26:17+00:00",
    "updated_at" : "2016-10-10T13:26:17+00:00",
    "in_homepage" : true,
    "id" : 1,
    "sku" : "a123b"
  }, {
    "visibility" : [ "facebook", "facebook" ],
    "is_prefered" : true,
    "is_new" : false,
    "is_digital" : true,
    "url_digital" : "http://example.com",
    "active" : true,
    "created_at" : "2016-10-10T13:26:17+00:00",
    "manual" : "Lorem Ipsum dolus",
    "i18n" : {
      "characteristics" : "Characteristics of product",
      "name" : "name",
      "description" : "Description of product",
      "synopsis" : "synopsis",
      "locale" : "pt_PT",
      "seo" : {
        "keywords" : "keywords",
        "description" : "description",
        "title" : "title"
      }
    },
    "url_video" : "http://youtube.com/foobar/qwocqpeibas2www",
    "expires_at" : "2016-10-10T13:26:17+00:00",
    "updated_at" : "2016-10-10T13:26:17+00:00",
    "in_homepage" : true,
    "id" : 1,
    "sku" : "a123b"
  } ]
}}]
     
     - parameter id: (path) ID of product to fetch 
     - parameter includes: (query) Include associated objects within response (optional)
     - parameter limit: (query) max records to return (optional)

     - returns: RequestBuilder<InlineResponse2014> 
     */
    public class func getProductByIdWithRequestBuilder(id id: Int64, includes: [String]? = nil, limit: Int32? = nil) -> RequestBuilder<InlineResponse2014> {
        var path = "/products/{id}/"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "includes": includes,
            "limit": limit?.encodeToJSON()
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<InlineResponse2014>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**

     - parameter includes: (query) Include associated objects within response (optional)
     - parameter limit: (query) max records to return (optional)
     - parameter orderBy: (query) Specify the field to be sorted, examples:  - &#x60;?order_by&#x3D;id|desc&#x60; - &#x60;?order_by&#x3D;updated_at|desc,position|asc&#x60;  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getProducts(includes includes: [String]? = nil, limit: Int32? = nil, orderBy: [String]? = nil, completion: ((data: InlineResponse2006?, error: ErrorType?) -> Void)) {
        getProductsWithRequestBuilder(includes: includes, limit: limit, orderBy: orderBy).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - GET /products
     - Returns all products from the system that the user has access to  ### Includes You can give the following values on includes parameter: `brands, categories, routes, stocks` 
     - API Key:
       - type: apiKey APIToken 
       - name: APIKeyHeader
     - examples: [{contentType=application/json, example={
  "data" : [ {
    "visibility" : [ "facebook", "facebook" ],
    "is_prefered" : true,
    "is_new" : false,
    "is_digital" : true,
    "url_digital" : "http://example.com",
    "active" : true,
    "created_at" : "2016-10-10T13:26:17+00:00",
    "manual" : "Lorem Ipsum dolus",
    "i18n" : {
      "characteristics" : "Characteristics of product",
      "name" : "name",
      "description" : "Description of product",
      "synopsis" : "synopsis",
      "locale" : "pt_PT",
      "seo" : {
        "keywords" : "keywords",
        "description" : "description",
        "title" : "title"
      }
    },
    "url_video" : "http://youtube.com/foobar/qwocqpeibas2www",
    "expires_at" : "2016-10-10T13:26:17+00:00",
    "updated_at" : "2016-10-10T13:26:17+00:00",
    "in_homepage" : true,
    "id" : 1,
    "sku" : "a123b"
  }, {
    "visibility" : [ "facebook", "facebook" ],
    "is_prefered" : true,
    "is_new" : false,
    "is_digital" : true,
    "url_digital" : "http://example.com",
    "active" : true,
    "created_at" : "2016-10-10T13:26:17+00:00",
    "manual" : "Lorem Ipsum dolus",
    "i18n" : {
      "characteristics" : "Characteristics of product",
      "name" : "name",
      "description" : "Description of product",
      "synopsis" : "synopsis",
      "locale" : "pt_PT",
      "seo" : {
        "keywords" : "keywords",
        "description" : "description",
        "title" : "title"
      }
    },
    "url_video" : "http://youtube.com/foobar/qwocqpeibas2www",
    "expires_at" : "2016-10-10T13:26:17+00:00",
    "updated_at" : "2016-10-10T13:26:17+00:00",
    "in_homepage" : true,
    "id" : 1,
    "sku" : "a123b"
  } ],
  "meta" : {
    "total" : "total"
  }
}}]
     
     - parameter includes: (query) Include associated objects within response (optional)
     - parameter limit: (query) max records to return (optional)
     - parameter orderBy: (query) Specify the field to be sorted, examples:  - &#x60;?order_by&#x3D;id|desc&#x60; - &#x60;?order_by&#x3D;updated_at|desc,position|asc&#x60;  (optional)

     - returns: RequestBuilder<InlineResponse2006> 
     */
    public class func getProductsWithRequestBuilder(includes includes: [String]? = nil, limit: Int32? = nil, orderBy: [String]? = nil) -> RequestBuilder<InlineResponse2006> {
        let path = "/products"
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "includes": includes,
            "limit": limit?.encodeToJSON(),
            "order_by": orderBy
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<InlineResponse2006>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**

     - parameter id: (path) ID of product to update 
     - parameter tax: (body) Product to add to the store 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func updateProductById(id id: Int64, tax: Product, completion: ((error: ErrorType?) -> Void)) {
        updateProductByIdWithRequestBuilder(id: id, tax: tax).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     - PUT /products/{id}/
     - update a single product based on the ID supplied
     - API Key:
       - type: apiKey APIToken 
       - name: APIKeyHeader
     
     - parameter id: (path) ID of product to update 
     - parameter tax: (body) Product to add to the store 

     - returns: RequestBuilder<Void> 
     */
    public class func updateProductByIdWithRequestBuilder(id id: Int64, tax: Product) -> RequestBuilder<Void> {
        var path = "/products/{id}/"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = tax.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**

     - parameter id: (path) ID of product to update 
     - parameter tax: (body) Product to add to the store 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func updateProductById_0(id id: Int64, tax: Product, completion: ((error: ErrorType?) -> Void)) {
        updateProductById_0WithRequestBuilder(id: id, tax: tax).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     - PATCH /products/{id}/
     - update a single product based on the ID supplied
     - API Key:
       - type: apiKey APIToken 
       - name: APIKeyHeader
     
     - parameter id: (path) ID of product to update 
     - parameter tax: (body) Product to add to the store 

     - returns: RequestBuilder<Void> 
     */
    public class func updateProductById_0WithRequestBuilder(id id: Int64, tax: Product) -> RequestBuilder<Void> {
        var path = "/products/{id}/"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = tax.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PATCH", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

}
