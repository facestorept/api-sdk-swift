//
// ShippingsAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class ShippingsAPI: APIBase {
    /**

     - parameter shipping: (body) Shipping to add to the store 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func addShipping(shipping shipping: Shipping, completion: ((data: InlineResponse2013?, error: ErrorType?) -> Void)) {
        addShippingWithRequestBuilder(shipping: shipping).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - POST /shippings
     - Creates a new shipping in the store.
     - API Key:
       - type: apiKey APIToken 
       - name: APIKeyHeader
     - examples: [{contentType=application/json, example={
  "data" : [ {
    "image" : "https://facestore.pt/storemanager/public/images/shipping/dhl.png",
    "updated_at" : "2012-07-12T15:09:43.000+0000",
    "name" : "DHL",
    "active" : true,
    "created_at" : "2012-07-12T15:09:43.000+0000",
    "id" : 1
  }, {
    "image" : "https://facestore.pt/storemanager/public/images/shipping/dhl.png",
    "updated_at" : "2012-07-12T15:09:43.000+0000",
    "name" : "DHL",
    "active" : true,
    "created_at" : "2012-07-12T15:09:43.000+0000",
    "id" : 1
  } ]
}}]
     
     - parameter shipping: (body) Shipping to add to the store 

     - returns: RequestBuilder<InlineResponse2013> 
     */
    public class func addShippingWithRequestBuilder(shipping shipping: Shipping) -> RequestBuilder<InlineResponse2013> {
        let path = "/shippings"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = shipping.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<InlineResponse2013>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**

     - parameter id: (path) ID of shipping to delete 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func deleteShippingById(id id: Int64, completion: ((error: ErrorType?) -> Void)) {
        deleteShippingByIdWithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     - DELETE /shippings/{id}/
     - deletes a single shipping based on the ID supplied
     - API Key:
       - type: apiKey APIToken 
       - name: APIKeyHeader
     
     - parameter id: (path) ID of shipping to delete 

     - returns: RequestBuilder<Void> 
     */
    public class func deleteShippingByIdWithRequestBuilder(id id: Int64) -> RequestBuilder<Void> {
        var path = "/shippings/{id}/"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**

     - parameter id: (path) ID of shipping to fetch 
     - parameter limit: (query) max records to return (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getShippingById(id id: Int64, limit: Int32? = nil, completion: ((data: InlineResponse2013?, error: ErrorType?) -> Void)) {
        getShippingByIdWithRequestBuilder(id: id, limit: limit).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - GET /shippings/{id}/
     - Returns a shipping based on a single ID
     - API Key:
       - type: apiKey APIToken 
       - name: APIKeyHeader
     - examples: [{contentType=application/json, example={
  "data" : [ {
    "image" : "https://facestore.pt/storemanager/public/images/shipping/dhl.png",
    "updated_at" : "2012-07-12T15:09:43.000+0000",
    "name" : "DHL",
    "active" : true,
    "created_at" : "2012-07-12T15:09:43.000+0000",
    "id" : 1
  }, {
    "image" : "https://facestore.pt/storemanager/public/images/shipping/dhl.png",
    "updated_at" : "2012-07-12T15:09:43.000+0000",
    "name" : "DHL",
    "active" : true,
    "created_at" : "2012-07-12T15:09:43.000+0000",
    "id" : 1
  } ]
}}]
     
     - parameter id: (path) ID of shipping to fetch 
     - parameter limit: (query) max records to return (optional)

     - returns: RequestBuilder<InlineResponse2013> 
     */
    public class func getShippingByIdWithRequestBuilder(id id: Int64, limit: Int32? = nil) -> RequestBuilder<InlineResponse2013> {
        var path = "/shippings/{id}/"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "limit": limit?.encodeToJSON()
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<InlineResponse2013>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**

     - parameter includes: (query) Include associated objects within response (optional)
     - parameter limit: (query) max records to return (optional)
     - parameter orderBy: (query) Specify the field to be sorted, examples:  - &#x60;?order_by&#x3D;id|desc&#x60; - &#x60;?order_by&#x3D;updated_at|desc,position|asc&#x60;  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getShippings(includes includes: [String]? = nil, limit: Int32? = nil, orderBy: [String]? = nil, completion: ((data: InlineResponse2003?, error: ErrorType?) -> Void)) {
        getShippingsWithRequestBuilder(includes: includes, limit: limit, orderBy: orderBy).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - GET /shippings
     - Returns all shippings from the system that the user has access to
     - API Key:
       - type: apiKey APIToken 
       - name: APIKeyHeader
     - examples: [{contentType=application/json, example={
  "data" : [ {
    "image" : "https://facestore.pt/storemanager/public/images/shipping/dhl.png",
    "updated_at" : "2012-07-12T15:09:43.000+0000",
    "name" : "DHL",
    "active" : true,
    "created_at" : "2012-07-12T15:09:43.000+0000",
    "id" : 1
  }, {
    "image" : "https://facestore.pt/storemanager/public/images/shipping/dhl.png",
    "updated_at" : "2012-07-12T15:09:43.000+0000",
    "name" : "DHL",
    "active" : true,
    "created_at" : "2012-07-12T15:09:43.000+0000",
    "id" : 1
  } ],
  "meta" : {
    "total" : "total"
  }
}}]
     
     - parameter includes: (query) Include associated objects within response (optional)
     - parameter limit: (query) max records to return (optional)
     - parameter orderBy: (query) Specify the field to be sorted, examples:  - &#x60;?order_by&#x3D;id|desc&#x60; - &#x60;?order_by&#x3D;updated_at|desc,position|asc&#x60;  (optional)

     - returns: RequestBuilder<InlineResponse2003> 
     */
    public class func getShippingsWithRequestBuilder(includes includes: [String]? = nil, limit: Int32? = nil, orderBy: [String]? = nil) -> RequestBuilder<InlineResponse2003> {
        let path = "/shippings"
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "includes": includes,
            "limit": limit?.encodeToJSON(),
            "order_by": orderBy
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<InlineResponse2003>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**

     - parameter id: (path) ID of shipping to update 
     - parameter tax: (body) Shipping to update in store 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func updateShippingById(id id: Int64, tax: Shipping, completion: ((data: InlineResponse2013?, error: ErrorType?) -> Void)) {
        updateShippingByIdWithRequestBuilder(id: id, tax: tax).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - PUT /shippings/{id}/
     - update a single shipping based on the ID supplied
     - API Key:
       - type: apiKey APIToken 
       - name: APIKeyHeader
     - examples: [{contentType=application/json, example={
  "data" : [ {
    "image" : "https://facestore.pt/storemanager/public/images/shipping/dhl.png",
    "updated_at" : "2012-07-12T15:09:43.000+0000",
    "name" : "DHL",
    "active" : true,
    "created_at" : "2012-07-12T15:09:43.000+0000",
    "id" : 1
  }, {
    "image" : "https://facestore.pt/storemanager/public/images/shipping/dhl.png",
    "updated_at" : "2012-07-12T15:09:43.000+0000",
    "name" : "DHL",
    "active" : true,
    "created_at" : "2012-07-12T15:09:43.000+0000",
    "id" : 1
  } ]
}}]
     
     - parameter id: (path) ID of shipping to update 
     - parameter tax: (body) Shipping to update in store 

     - returns: RequestBuilder<InlineResponse2013> 
     */
    public class func updateShippingByIdWithRequestBuilder(id id: Int64, tax: Shipping) -> RequestBuilder<InlineResponse2013> {
        var path = "/shippings/{id}/"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = tax.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<InlineResponse2013>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**

     - parameter id: (path) ID of shipping to update 
     - parameter tax: (body) Shipping to update in store 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func updateShippingById_0(id id: Int64, tax: Shipping, completion: ((data: InlineResponse2013?, error: ErrorType?) -> Void)) {
        updateShippingById_0WithRequestBuilder(id: id, tax: tax).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - PATCH /shippings/{id}/
     - update a single shipping based on the ID supplied
     - API Key:
       - type: apiKey APIToken 
       - name: APIKeyHeader
     - examples: [{contentType=application/json, example={
  "data" : [ {
    "image" : "https://facestore.pt/storemanager/public/images/shipping/dhl.png",
    "updated_at" : "2012-07-12T15:09:43.000+0000",
    "name" : "DHL",
    "active" : true,
    "created_at" : "2012-07-12T15:09:43.000+0000",
    "id" : 1
  }, {
    "image" : "https://facestore.pt/storemanager/public/images/shipping/dhl.png",
    "updated_at" : "2012-07-12T15:09:43.000+0000",
    "name" : "DHL",
    "active" : true,
    "created_at" : "2012-07-12T15:09:43.000+0000",
    "id" : 1
  } ]
}}]
     
     - parameter id: (path) ID of shipping to update 
     - parameter tax: (body) Shipping to update in store 

     - returns: RequestBuilder<InlineResponse2013> 
     */
    public class func updateShippingById_0WithRequestBuilder(id id: Int64, tax: Shipping) -> RequestBuilder<InlineResponse2013> {
        var path = "/shippings/{id}/"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = tax.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<InlineResponse2013>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PATCH", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

}
