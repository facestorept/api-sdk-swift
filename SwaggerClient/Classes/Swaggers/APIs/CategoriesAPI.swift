//
// CategoriesAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class CategoriesAPI: APIBase {
    /**

     - parameter category: (body) Category to add to the store 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func addCategories(category category: Category, completion: ((data: InlineResponse2011?, error: ErrorType?) -> Void)) {
        addCategoriesWithRequestBuilder(category: category).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - POST /categories
     - Creates a new category in the store.
     - API Key:
       - type: apiKey APIToken 
       - name: APIKeyHeader
     - examples: [{contentType=application/json, example={
  "data" : [ {
    "image_small" : "image_small",
    "updated_at" : "2000-01-23T04:56:07.000+00:00",
    "visibility" : [ "facebook", "facebook" ],
    "active" : true,
    "created_at" : "2000-01-23T04:56:07.000+00:00",
    "id" : 0,
    "position" : 6,
    "image_larger" : "image_larger",
    "i18n" : [ {
      "name" : "name",
      "description" : "description",
      "locale" : "pt_PT"
    }, {
      "name" : "name",
      "description" : "description",
      "locale" : "pt_PT"
    } ]
  }, {
    "image_small" : "image_small",
    "updated_at" : "2000-01-23T04:56:07.000+00:00",
    "visibility" : [ "facebook", "facebook" ],
    "active" : true,
    "created_at" : "2000-01-23T04:56:07.000+00:00",
    "id" : 0,
    "position" : 6,
    "image_larger" : "image_larger",
    "i18n" : [ {
      "name" : "name",
      "description" : "description",
      "locale" : "pt_PT"
    }, {
      "name" : "name",
      "description" : "description",
      "locale" : "pt_PT"
    } ]
  } ]
}}]
     
     - parameter category: (body) Category to add to the store 

     - returns: RequestBuilder<InlineResponse2011> 
     */
    public class func addCategoriesWithRequestBuilder(category category: Category) -> RequestBuilder<InlineResponse2011> {
        let path = "/categories"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = category.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<InlineResponse2011>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**

     - parameter id: (path) ID of category to delete 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func deleteCategoryById(id id: Int64, completion: ((error: ErrorType?) -> Void)) {
        deleteCategoryByIdWithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     - DELETE /categories/{id}/
     - deletes a single category based on the ID supplied
     - API Key:
       - type: apiKey APIToken 
       - name: APIKeyHeader
     
     - parameter id: (path) ID of category to delete 

     - returns: RequestBuilder<Void> 
     */
    public class func deleteCategoryByIdWithRequestBuilder(id id: Int64) -> RequestBuilder<Void> {
        var path = "/categories/{id}/"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**

     - parameter includes: (query) Include associated objects within response (optional)
     - parameter limit: (query) max records to return (optional)
     - parameter orderBy: (query) Specify the field to be sorted, examples:  - &#x60;?order_by&#x3D;id|desc&#x60; - &#x60;?order_by&#x3D;updated_at|desc,position|asc&#x60;  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getCategories(includes includes: [String]? = nil, limit: Int32? = nil, orderBy: [String]? = nil, completion: ((data: InlineResponse2001?, error: ErrorType?) -> Void)) {
        getCategoriesWithRequestBuilder(includes: includes, limit: limit, orderBy: orderBy).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - GET /categories
     - Returns all categories from the system that the user has access to  ### Includes You can give the following values on includes parameter: `routes, products` 
     - API Key:
       - type: apiKey APIToken 
       - name: APIKeyHeader
     - examples: [{contentType=application/json, example={
  "data" : [ {
    "image_small" : "image_small",
    "updated_at" : "2000-01-23T04:56:07.000+00:00",
    "visibility" : [ "facebook", "facebook" ],
    "active" : true,
    "created_at" : "2000-01-23T04:56:07.000+00:00",
    "id" : 0,
    "position" : 6,
    "image_larger" : "image_larger",
    "i18n" : [ {
      "name" : "name",
      "description" : "description",
      "locale" : "pt_PT"
    }, {
      "name" : "name",
      "description" : "description",
      "locale" : "pt_PT"
    } ]
  }, {
    "image_small" : "image_small",
    "updated_at" : "2000-01-23T04:56:07.000+00:00",
    "visibility" : [ "facebook", "facebook" ],
    "active" : true,
    "created_at" : "2000-01-23T04:56:07.000+00:00",
    "id" : 0,
    "position" : 6,
    "image_larger" : "image_larger",
    "i18n" : [ {
      "name" : "name",
      "description" : "description",
      "locale" : "pt_PT"
    }, {
      "name" : "name",
      "description" : "description",
      "locale" : "pt_PT"
    } ]
  } ],
  "meta" : {
    "total" : "total"
  }
}}]
     
     - parameter includes: (query) Include associated objects within response (optional)
     - parameter limit: (query) max records to return (optional)
     - parameter orderBy: (query) Specify the field to be sorted, examples:  - &#x60;?order_by&#x3D;id|desc&#x60; - &#x60;?order_by&#x3D;updated_at|desc,position|asc&#x60;  (optional)

     - returns: RequestBuilder<InlineResponse2001> 
     */
    public class func getCategoriesWithRequestBuilder(includes includes: [String]? = nil, limit: Int32? = nil, orderBy: [String]? = nil) -> RequestBuilder<InlineResponse2001> {
        let path = "/categories"
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "includes": includes,
            "limit": limit?.encodeToJSON(),
            "order_by": orderBy
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<InlineResponse2001>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**

     - parameter id: (path) ID of category to fetch 
     - parameter includes: (query) Include associated objects within response (optional)
     - parameter limit: (query) max records to return (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getCategoryById(id id: Int64, includes: [String]? = nil, limit: Int32? = nil, completion: ((data: InlineResponse2011?, error: ErrorType?) -> Void)) {
        getCategoryByIdWithRequestBuilder(id: id, includes: includes, limit: limit).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - GET /categories/{id}/
     - Returns a category based on a single ID  ### Includes You can give the following values on includes parameter: `routes, products` 
     - API Key:
       - type: apiKey APIToken 
       - name: APIKeyHeader
     - examples: [{contentType=application/json, example={
  "data" : [ {
    "image_small" : "image_small",
    "updated_at" : "2000-01-23T04:56:07.000+00:00",
    "visibility" : [ "facebook", "facebook" ],
    "active" : true,
    "created_at" : "2000-01-23T04:56:07.000+00:00",
    "id" : 0,
    "position" : 6,
    "image_larger" : "image_larger",
    "i18n" : [ {
      "name" : "name",
      "description" : "description",
      "locale" : "pt_PT"
    }, {
      "name" : "name",
      "description" : "description",
      "locale" : "pt_PT"
    } ]
  }, {
    "image_small" : "image_small",
    "updated_at" : "2000-01-23T04:56:07.000+00:00",
    "visibility" : [ "facebook", "facebook" ],
    "active" : true,
    "created_at" : "2000-01-23T04:56:07.000+00:00",
    "id" : 0,
    "position" : 6,
    "image_larger" : "image_larger",
    "i18n" : [ {
      "name" : "name",
      "description" : "description",
      "locale" : "pt_PT"
    }, {
      "name" : "name",
      "description" : "description",
      "locale" : "pt_PT"
    } ]
  } ]
}}]
     
     - parameter id: (path) ID of category to fetch 
     - parameter includes: (query) Include associated objects within response (optional)
     - parameter limit: (query) max records to return (optional)

     - returns: RequestBuilder<InlineResponse2011> 
     */
    public class func getCategoryByIdWithRequestBuilder(id id: Int64, includes: [String]? = nil, limit: Int32? = nil) -> RequestBuilder<InlineResponse2011> {
        var path = "/categories/{id}/"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "includes": includes,
            "limit": limit?.encodeToJSON()
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<InlineResponse2011>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**

     - parameter id: (path) ID of category to update 
     - parameter category: (body) Category to update in store 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func updateCategoryById(id id: Int64, category: AnyObject, completion: ((error: ErrorType?) -> Void)) {
        updateCategoryByIdWithRequestBuilder(id: id, category: category).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     - PUT /categories/{id}/
     - update a single category based on the ID supplied
     - API Key:
       - type: apiKey APIToken 
       - name: APIKeyHeader
     
     - parameter id: (path) ID of category to update 
     - parameter category: (body) Category to update in store 

     - returns: RequestBuilder<Void> 
     */
    public class func updateCategoryByIdWithRequestBuilder(id id: Int64, category: AnyObject) -> RequestBuilder<Void> {
        var path = "/categories/{id}/"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = category.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

}
